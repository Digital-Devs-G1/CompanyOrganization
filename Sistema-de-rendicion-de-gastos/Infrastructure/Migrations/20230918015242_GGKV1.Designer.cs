// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ReportsDbContext))]
    [Migration("20230918015242_GGKV1")]
    partial class GGKV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Adress = "Av. Calchaquí 3950",
                            Cuit = "30-69730872-1",
                            Name = "Easy SRL",
                            Phone = "4229-4000"
                        },
                        new
                        {
                            CompanyId = 2,
                            Adress = "Av. Rivadavia 430",
                            Cuit = "33-70892523-9",
                            Name = "Remax",
                            Phone = "4253-4987"
                        },
                        new
                        {
                            CompanyId = 3,
                            Adress = "Av. La Plata 1932",
                            Cuit = "30-67940701-1",
                            Name = "Papelera el Vasquito",
                            Phone = "4280-5775"
                        },
                        new
                        {
                            CompanyId = 4,
                            Adress = "Almte. Brown 281",
                            Cuit = "30-56102989-6",
                            Name = "Simonetti Constructora",
                            Phone = "4224-0363"
                        },
                        new
                        {
                            CompanyId = 5,
                            Adress = "Av. La Plata 3401",
                            Cuit = "30-51199267-9",
                            Name = "El bosque",
                            Phone = "7539-8916"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "Recursos Humanos"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Name = "Comercial"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Name = "Control de Gestión"
                        },
                        new
                        {
                            DepartmentId = 5,
                            Name = "Logística y Operaciones"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("FirsName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            CivilStatus = "Soltero",
                            Dni = 41345678,
                            FirsName = "Gustavo",
                            JobId = 0,
                            LastName = "Garcia Krahn",
                            Phone = "12345678",
                            Sex = "Hombre",
                            UserId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            CivilStatus = "Soltero",
                            Dni = 34654321,
                            FirsName = "Javier",
                            JobId = 1,
                            LastName = "Perez",
                            Phone = "12345679",
                            Sex = "Hombre",
                            UserId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            CivilStatus = "Soltero",
                            Dni = 52156489,
                            FirsName = "Josefa",
                            JobId = 2,
                            LastName = "Scoll",
                            Phone = "12345678",
                            Sex = "Mujer",
                            UserId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            CivilStatus = "Soltero",
                            Dni = 38654978,
                            FirsName = "Pedro",
                            JobId = 3,
                            LastName = "Rodriguez",
                            Phone = "12345678",
                            Sex = "Hombre",
                            UserId = 4
                        },
                        new
                        {
                            EmployeeId = 5,
                            CivilStatus = "Casado",
                            Dni = 40654978,
                            FirsName = "Fernando",
                            JobId = 2,
                            LastName = "Suarez",
                            Phone = "12123489",
                            Sex = "Hombre",
                            UserId = 5
                        },
                        new
                        {
                            EmployeeId = 6,
                            CivilStatus = "Soltero",
                            Dni = 43854978,
                            FirsName = "Jesus",
                            JobId = 2,
                            LastName = "Paez",
                            Phone = "95123489",
                            Sex = "Hombre",
                            UserId = 6
                        },
                        new
                        {
                            EmployeeId = 7,
                            CivilStatus = "Casado",
                            Dni = 42754978,
                            FirsName = "Pablo",
                            JobId = 2,
                            LastName = "Papalia",
                            Phone = "12123489",
                            Sex = "Hombre",
                            UserId = 7
                        },
                        new
                        {
                            EmployeeId = 8,
                            CivilStatus = "Casado",
                            Dni = 35454978,
                            FirsName = "Alfredo",
                            JobId = 2,
                            LastName = "Baez",
                            Phone = "12123489",
                            Sex = "Hombre",
                            UserId = 8
                        },
                        new
                        {
                            EmployeeId = 9,
                            CivilStatus = "Casado",
                            Dni = 42654978,
                            FirsName = "Silvia",
                            JobId = 2,
                            LastName = "Cardozo",
                            Phone = "65823489",
                            Sex = "Mujer",
                            UserId = 9
                        },
                        new
                        {
                            EmployeeId = 10,
                            CivilStatus = "Casado",
                            Dni = 3854978,
                            FirsName = "Jesica",
                            JobId = 2,
                            LastName = "Sirio",
                            Phone = "52493489",
                            Sex = "Mujer",
                            UserId = 10
                        },
                        new
                        {
                            EmployeeId = 11,
                            CivilStatus = "Casado",
                            Dni = 65754978,
                            FirsName = "Ana",
                            JobId = 2,
                            LastName = "Michel",
                            Phone = "2468489",
                            Sex = "Mujer",
                            UserId = 11
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("PayrollId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Payrolls");

                    b.HasData(
                        new
                        {
                            PayrollId = 1,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 1,
                            PositionId = 1
                        },
                        new
                        {
                            PayrollId = 2,
                            CompanyId = 1,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            PositionId = 2
                        },
                        new
                        {
                            PayrollId = 3,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 3,
                            PositionId = 3
                        },
                        new
                        {
                            PayrollId = 4,
                            CompanyId = 1,
                            DepartmentId = 2,
                            EmployeeId = 4,
                            PositionId = 3
                        },
                        new
                        {
                            PayrollId = 5,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 5,
                            PositionId = 4
                        },
                        new
                        {
                            PayrollId = 6,
                            CompanyId = 2,
                            DepartmentId = 2,
                            EmployeeId = 6,
                            PositionId = 4
                        },
                        new
                        {
                            PayrollId = 7,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 7,
                            PositionId = 4
                        },
                        new
                        {
                            PayrollId = 8,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 8,
                            PositionId = 5
                        },
                        new
                        {
                            PayrollId = 9,
                            CompanyId = 1,
                            DepartmentId = 1,
                            EmployeeId = 9,
                            PositionId = 5
                        },
                        new
                        {
                            PayrollId = 10,
                            CompanyId = 1,
                            DepartmentId = 2,
                            EmployeeId = 10,
                            PositionId = 5
                        },
                        new
                        {
                            PayrollId = 11,
                            CompanyId = 2,
                            DepartmentId = 1,
                            EmployeeId = 11,
                            PositionId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Hierarchy")
                        .HasColumnType("int");

                    b.Property<int>("MaxMonthlyAmount")
                        .HasColumnType("int");

                    b.HasKey("PositionId");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            Description = "Socio",
                            Hierarchy = 1,
                            MaxMonthlyAmount = 500000
                        },
                        new
                        {
                            PositionId = 2,
                            Description = "Director",
                            Hierarchy = 10,
                            MaxMonthlyAmount = 50000
                        },
                        new
                        {
                            PositionId = 3,
                            Description = "Gerente",
                            Hierarchy = 20,
                            MaxMonthlyAmount = 10000
                        },
                        new
                        {
                            PositionId = 4,
                            Description = "Supervisor",
                            Hierarchy = 30,
                            MaxMonthlyAmount = 1000
                        },
                        new
                        {
                            PositionId = 5,
                            Description = "Lider",
                            Hierarchy = 40,
                            MaxMonthlyAmount = 100
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.HasOne("Domain.Entities.Company", "CompanyNav")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "DepartmentNav")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "EmployeeNav")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Position", "PositionNav")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyNav");

                    b.Navigation("DepartmentNav");

                    b.Navigation("EmployeeNav");

                    b.Navigation("PositionNav");
                });
#pragma warning restore 612, 618
        }
    }
}
