// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ReportsDbContext))]
    [Migration("20230918000036_CreateInit")]
    partial class CreateInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Adress = "Av. Calchaquí 3950",
                            Cuit = "30-69730872-1",
                            Name = "Easy SRL",
                            Phone = "4229-4000"
                        },
                        new
                        {
                            CompanyId = 2,
                            Adress = "Av. Rivadavia 430",
                            Cuit = "33-70892523-9",
                            Name = "Remax",
                            Phone = "4253-4987"
                        },
                        new
                        {
                            CompanyId = 3,
                            Adress = "Av. La Plata 1932",
                            Cuit = "30-67940701-1",
                            Name = "Papelera el Vasquito",
                            Phone = "4280-5775"
                        },
                        new
                        {
                            CompanyId = 4,
                            Adress = "Almte. Brown 281",
                            Cuit = "30-56102989-6",
                            Name = "Simonetti Constructora",
                            Phone = "4224-0363"
                        },
                        new
                        {
                            CompanyId = 5,
                            Adress = "Av. La Plata 3401",
                            Cuit = "30-51199267-9",
                            Name = "El bosque",
                            Phone = "7539-8916"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "Recursos Humanos"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Name = "Comercial"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Name = "Control de Gestión"
                        },
                        new
                        {
                            DepartmentId = 5,
                            Name = "Logística y Operaciones"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("PayrollId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.HasOne("Domain.Entities.Company", "CompanyNav")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "DepartmentNav")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyNav");

                    b.Navigation("DepartmentNav");
                });
#pragma warning restore 612, 618
        }
    }
}
